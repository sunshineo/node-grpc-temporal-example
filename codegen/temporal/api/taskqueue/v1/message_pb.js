// source: temporal/api/taskqueue/v1/message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var dependencies_gogoproto_gogo_pb = require('../../../../dependencies/gogoproto/gogo_pb.js');
goog.object.extend(proto, dependencies_gogoproto_gogo_pb);
var temporal_api_enums_v1_task_queue_pb = require('../../../../temporal/api/enums/v1/task_queue_pb.js');
goog.object.extend(proto, temporal_api_enums_v1_task_queue_pb);
goog.exportSymbol('proto.temporal.api.taskqueue.v1.PollerInfo', null, global);
goog.exportSymbol('proto.temporal.api.taskqueue.v1.StickyExecutionAttributes', null, global);
goog.exportSymbol('proto.temporal.api.taskqueue.v1.TaskIdBlock', null, global);
goog.exportSymbol('proto.temporal.api.taskqueue.v1.TaskQueue', null, global);
goog.exportSymbol('proto.temporal.api.taskqueue.v1.TaskQueueMetadata', null, global);
goog.exportSymbol('proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata', null, global);
goog.exportSymbol('proto.temporal.api.taskqueue.v1.TaskQueueStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.taskqueue.v1.TaskQueue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.taskqueue.v1.TaskQueue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.temporal.api.taskqueue.v1.TaskQueue.displayName = 'proto.temporal.api.taskqueue.v1.TaskQueue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.taskqueue.v1.TaskQueueMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.taskqueue.v1.TaskQueueMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.temporal.api.taskqueue.v1.TaskQueueMetadata.displayName = 'proto.temporal.api.taskqueue.v1.TaskQueueMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.taskqueue.v1.TaskQueueStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.temporal.api.taskqueue.v1.TaskQueueStatus.displayName = 'proto.temporal.api.taskqueue.v1.TaskQueueStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.taskqueue.v1.TaskIdBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.taskqueue.v1.TaskIdBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.temporal.api.taskqueue.v1.TaskIdBlock.displayName = 'proto.temporal.api.taskqueue.v1.TaskIdBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.displayName = 'proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.taskqueue.v1.PollerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.taskqueue.v1.PollerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.temporal.api.taskqueue.v1.PollerInfo.displayName = 'proto.temporal.api.taskqueue.v1.PollerInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.temporal.api.taskqueue.v1.StickyExecutionAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.displayName = 'proto.temporal.api.taskqueue.v1.StickyExecutionAttributes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.taskqueue.v1.TaskQueue.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.taskqueue.v1.TaskQueue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.taskqueue.v1.TaskQueue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.TaskQueue.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueue}
 */
proto.temporal.api.taskqueue.v1.TaskQueue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.taskqueue.v1.TaskQueue;
  return proto.temporal.api.taskqueue.v1.TaskQueue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.taskqueue.v1.TaskQueue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueue}
 */
proto.temporal.api.taskqueue.v1.TaskQueue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.temporal.api.enums.v1.TaskQueueKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.taskqueue.v1.TaskQueue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.taskqueue.v1.TaskQueue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.taskqueue.v1.TaskQueue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.TaskQueue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.temporal.api.taskqueue.v1.TaskQueue.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueue} returns this
 */
proto.temporal.api.taskqueue.v1.TaskQueue.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional temporal.api.enums.v1.TaskQueueKind kind = 2;
 * @return {!proto.temporal.api.enums.v1.TaskQueueKind}
 */
proto.temporal.api.taskqueue.v1.TaskQueue.prototype.getKind = function() {
  return /** @type {!proto.temporal.api.enums.v1.TaskQueueKind} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.temporal.api.enums.v1.TaskQueueKind} value
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueue} returns this
 */
proto.temporal.api.taskqueue.v1.TaskQueue.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.taskqueue.v1.TaskQueueMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.taskqueue.v1.TaskQueueMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.taskqueue.v1.TaskQueueMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.TaskQueueMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxTasksPerSecond: (f = msg.getMaxTasksPerSecond()) && google_protobuf_wrappers_pb.DoubleValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueueMetadata}
 */
proto.temporal.api.taskqueue.v1.TaskQueueMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.taskqueue.v1.TaskQueueMetadata;
  return proto.temporal.api.taskqueue.v1.TaskQueueMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.taskqueue.v1.TaskQueueMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueueMetadata}
 */
proto.temporal.api.taskqueue.v1.TaskQueueMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.DoubleValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.DoubleValue.deserializeBinaryFromReader);
      msg.setMaxTasksPerSecond(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.taskqueue.v1.TaskQueueMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.taskqueue.v1.TaskQueueMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.taskqueue.v1.TaskQueueMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.TaskQueueMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxTasksPerSecond();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.DoubleValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.DoubleValue max_tasks_per_second = 1;
 * @return {?proto.google.protobuf.DoubleValue}
 */
proto.temporal.api.taskqueue.v1.TaskQueueMetadata.prototype.getMaxTasksPerSecond = function() {
  return /** @type{?proto.google.protobuf.DoubleValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.DoubleValue, 1));
};


/**
 * @param {?proto.google.protobuf.DoubleValue|undefined} value
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueueMetadata} returns this
*/
proto.temporal.api.taskqueue.v1.TaskQueueMetadata.prototype.setMaxTasksPerSecond = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueueMetadata} returns this
 */
proto.temporal.api.taskqueue.v1.TaskQueueMetadata.prototype.clearMaxTasksPerSecond = function() {
  return this.setMaxTasksPerSecond(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.temporal.api.taskqueue.v1.TaskQueueMetadata.prototype.hasMaxTasksPerSecond = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.taskqueue.v1.TaskQueueStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.taskqueue.v1.TaskQueueStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    backlogCountHint: jspb.Message.getFieldWithDefault(msg, 1, 0),
    readLevel: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ackLevel: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ratePerSecond: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    taskIdBlock: (f = msg.getTaskIdBlock()) && proto.temporal.api.taskqueue.v1.TaskIdBlock.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueueStatus}
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.taskqueue.v1.TaskQueueStatus;
  return proto.temporal.api.taskqueue.v1.TaskQueueStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.taskqueue.v1.TaskQueueStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueueStatus}
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBacklogCountHint(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReadLevel(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAckLevel(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRatePerSecond(value);
      break;
    case 5:
      var value = new proto.temporal.api.taskqueue.v1.TaskIdBlock;
      reader.readMessage(value,proto.temporal.api.taskqueue.v1.TaskIdBlock.deserializeBinaryFromReader);
      msg.setTaskIdBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.taskqueue.v1.TaskQueueStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.taskqueue.v1.TaskQueueStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBacklogCountHint();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getReadLevel();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAckLevel();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getRatePerSecond();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getTaskIdBlock();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.temporal.api.taskqueue.v1.TaskIdBlock.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 backlog_count_hint = 1;
 * @return {number}
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.getBacklogCountHint = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueueStatus} returns this
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.setBacklogCountHint = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 read_level = 2;
 * @return {number}
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.getReadLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueueStatus} returns this
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.setReadLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 ack_level = 3;
 * @return {number}
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.getAckLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueueStatus} returns this
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.setAckLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double rate_per_second = 4;
 * @return {number}
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.getRatePerSecond = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueueStatus} returns this
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.setRatePerSecond = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional TaskIdBlock task_id_block = 5;
 * @return {?proto.temporal.api.taskqueue.v1.TaskIdBlock}
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.getTaskIdBlock = function() {
  return /** @type{?proto.temporal.api.taskqueue.v1.TaskIdBlock} */ (
    jspb.Message.getWrapperField(this, proto.temporal.api.taskqueue.v1.TaskIdBlock, 5));
};


/**
 * @param {?proto.temporal.api.taskqueue.v1.TaskIdBlock|undefined} value
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueueStatus} returns this
*/
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.setTaskIdBlock = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueueStatus} returns this
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.clearTaskIdBlock = function() {
  return this.setTaskIdBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.temporal.api.taskqueue.v1.TaskQueueStatus.prototype.hasTaskIdBlock = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.taskqueue.v1.TaskIdBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.taskqueue.v1.TaskIdBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.taskqueue.v1.TaskIdBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.TaskIdBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    startId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    endId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.taskqueue.v1.TaskIdBlock}
 */
proto.temporal.api.taskqueue.v1.TaskIdBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.taskqueue.v1.TaskIdBlock;
  return proto.temporal.api.taskqueue.v1.TaskIdBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.taskqueue.v1.TaskIdBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.taskqueue.v1.TaskIdBlock}
 */
proto.temporal.api.taskqueue.v1.TaskIdBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.taskqueue.v1.TaskIdBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.taskqueue.v1.TaskIdBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.taskqueue.v1.TaskIdBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.TaskIdBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEndId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 start_id = 1;
 * @return {number}
 */
proto.temporal.api.taskqueue.v1.TaskIdBlock.prototype.getStartId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.temporal.api.taskqueue.v1.TaskIdBlock} returns this
 */
proto.temporal.api.taskqueue.v1.TaskIdBlock.prototype.setStartId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 end_id = 2;
 * @return {number}
 */
proto.temporal.api.taskqueue.v1.TaskIdBlock.prototype.getEndId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.temporal.api.taskqueue.v1.TaskIdBlock} returns this
 */
proto.temporal.api.taskqueue.v1.TaskIdBlock.prototype.setEndId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ownerHostName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata}
 */
proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata;
  return proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata}
 */
proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerHostName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOwnerHostName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata} returns this
 */
proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string owner_host_name = 2;
 * @return {string}
 */
proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.prototype.getOwnerHostName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata} returns this
 */
proto.temporal.api.taskqueue.v1.TaskQueuePartitionMetadata.prototype.setOwnerHostName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.taskqueue.v1.PollerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.taskqueue.v1.PollerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.taskqueue.v1.PollerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.PollerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastAccessTime: (f = msg.getLastAccessTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    identity: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ratePerSecond: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.taskqueue.v1.PollerInfo}
 */
proto.temporal.api.taskqueue.v1.PollerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.taskqueue.v1.PollerInfo;
  return proto.temporal.api.taskqueue.v1.PollerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.taskqueue.v1.PollerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.taskqueue.v1.PollerInfo}
 */
proto.temporal.api.taskqueue.v1.PollerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastAccessTime(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRatePerSecond(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.taskqueue.v1.PollerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.taskqueue.v1.PollerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.taskqueue.v1.PollerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.PollerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastAccessTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRatePerSecond();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp last_access_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.temporal.api.taskqueue.v1.PollerInfo.prototype.getLastAccessTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.temporal.api.taskqueue.v1.PollerInfo} returns this
*/
proto.temporal.api.taskqueue.v1.PollerInfo.prototype.setLastAccessTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.temporal.api.taskqueue.v1.PollerInfo} returns this
 */
proto.temporal.api.taskqueue.v1.PollerInfo.prototype.clearLastAccessTime = function() {
  return this.setLastAccessTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.temporal.api.taskqueue.v1.PollerInfo.prototype.hasLastAccessTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string identity = 2;
 * @return {string}
 */
proto.temporal.api.taskqueue.v1.PollerInfo.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.temporal.api.taskqueue.v1.PollerInfo} returns this
 */
proto.temporal.api.taskqueue.v1.PollerInfo.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double rate_per_second = 3;
 * @return {number}
 */
proto.temporal.api.taskqueue.v1.PollerInfo.prototype.getRatePerSecond = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.temporal.api.taskqueue.v1.PollerInfo} returns this
 */
proto.temporal.api.taskqueue.v1.PollerInfo.prototype.setRatePerSecond = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.temporal.api.taskqueue.v1.StickyExecutionAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    workerTaskQueue: (f = msg.getWorkerTaskQueue()) && proto.temporal.api.taskqueue.v1.TaskQueue.toObject(includeInstance, f),
    scheduleToStartTimeout: (f = msg.getScheduleToStartTimeout()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.temporal.api.taskqueue.v1.StickyExecutionAttributes}
 */
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.temporal.api.taskqueue.v1.StickyExecutionAttributes;
  return proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.temporal.api.taskqueue.v1.StickyExecutionAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.temporal.api.taskqueue.v1.StickyExecutionAttributes}
 */
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.temporal.api.taskqueue.v1.TaskQueue;
      reader.readMessage(value,proto.temporal.api.taskqueue.v1.TaskQueue.deserializeBinaryFromReader);
      msg.setWorkerTaskQueue(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setScheduleToStartTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.temporal.api.taskqueue.v1.StickyExecutionAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWorkerTaskQueue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.temporal.api.taskqueue.v1.TaskQueue.serializeBinaryToWriter
    );
  }
  f = message.getScheduleToStartTimeout();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional TaskQueue worker_task_queue = 1;
 * @return {?proto.temporal.api.taskqueue.v1.TaskQueue}
 */
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.prototype.getWorkerTaskQueue = function() {
  return /** @type{?proto.temporal.api.taskqueue.v1.TaskQueue} */ (
    jspb.Message.getWrapperField(this, proto.temporal.api.taskqueue.v1.TaskQueue, 1));
};


/**
 * @param {?proto.temporal.api.taskqueue.v1.TaskQueue|undefined} value
 * @return {!proto.temporal.api.taskqueue.v1.StickyExecutionAttributes} returns this
*/
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.prototype.setWorkerTaskQueue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.temporal.api.taskqueue.v1.StickyExecutionAttributes} returns this
 */
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.prototype.clearWorkerTaskQueue = function() {
  return this.setWorkerTaskQueue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.prototype.hasWorkerTaskQueue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration schedule_to_start_timeout = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.prototype.getScheduleToStartTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.temporal.api.taskqueue.v1.StickyExecutionAttributes} returns this
*/
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.prototype.setScheduleToStartTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.temporal.api.taskqueue.v1.StickyExecutionAttributes} returns this
 */
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.prototype.clearScheduleToStartTimeout = function() {
  return this.setScheduleToStartTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.temporal.api.taskqueue.v1.StickyExecutionAttributes.prototype.hasScheduleToStartTimeout = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.temporal.api.taskqueue.v1);
